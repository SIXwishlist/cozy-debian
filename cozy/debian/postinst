#!/bin/sh -e
# postinst script for cozy
#
# see: dh_installdeb(1)

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Use debconf.
. /usr/share/debconf/confmodule

case "$1" in
    configure)
	# Check their answer.
	db_input medium cozy/domain_name
	db_go

	db_get cozy/domain_name
	COZY_DOMAIN=$RET

        echo 'pip installation'
        pip freeze | grep -q virtualenv || pip install virtualenv
	echo 'nmp installation'
        [ ! -d /usr/local/lib/node_modules/coffee-script ] && npm install -g coffee-script
        [ ! -d /usr/local/lib/node_modules/cozy-controller ] && npm install -g cozy-controller
        [ ! -d /usr/local/lib/node_modules/cozy-monitor ] && npm install -g cozy-monitor
	echo 'users creation.'
        id cozy >/dev/null 2>&1 || useradd -M cozy
        id cozy-data-system >/dev/null 2>&1 || useradd -M cozy-data-system
        id cozy-home >/dev/null 2>&1 || useradd -M cozy-home
	echo 'Directories management'
        if [ ! -d /etc/cozy ]; then
                mkdir /etc/cozy
        fi
        chown -hR cozy /etc/cozy
	echo 'CouchDB access'
        if [ ! -f /etc/cozy/couchdb.login ]; then
                pwgen -1 > /etc/cozy/couchdb.login && \
                pwgen -1 >> /etc/cozy/couchdb.login
                while ! curl -s 127.0.0.1:5984 >/dev/null; do echo "Wait CouchDB"; sleep 5; done
                curl -s -X PUT 127.0.0.1:5984/_config/admins/$(head -n1 /etc/cozy/couchdb.login) -d "\"$(tail -n1 /etc/cozy/couchdb.login)\""
        fi
        chown cozy-data-system /etc/cozy/couchdb.login
        chmod 640 /etc/cozy/couchdb.login
	echo 'Cozy indexer.'
        if [ ! -d /usr/local/cozy-indexer ]; then
                mkdir -p /usr/local/cozy-indexer && \
                cd /usr/local/cozy-indexer && \
                git clone https://github.com/cozy/cozy-data-indexer.git && \
                cd /usr/local/cozy-indexer/cozy-data-indexer && \
                virtualenv --quiet /usr/local/cozy-indexer/cozy-data-indexer/virtualenv && \
                /usr/local/cozy-indexer/cozy-data-indexer/virtualenv/bin/pip install -r /usr/local/cozy-indexer/cozy-data-indexer/requirements/common.txt && \
                chown -R cozy:cozy /usr/local/cozy-indexer
        fi
        if [ ! -f /etc/supervisor/conf.d/cozy-indexer.conf ]; then
                cat > /etc/supervisor/conf.d/cozy-indexer.conf <<'EOF'
[program:cozy-indexer]
autorestart=true
command=/usr/local/cozy-indexer/cozy-data-indexer/virtualenv/bin/python server.py
directory=/usr/local/cozy-indexer/cozy-data-indexer
redirect_stderr=true
user=cozy
priority=9
EOF
                supervisorctl reload
        fi
	echo 'node link.'
        if [ ! -f /usr/bin/node ]; then
                ln -s /usr/bin/nodejs /usr/bin/node
        fi
	echo 'cozy-controller supervisor configuration'
        if [ ! -f /etc/supervisor/conf.d/cozy-controller.conf ]; then
                cat > /etc/supervisor/conf.d/cozy-controller.conf <<'EOF'
[program:cozy-controller]
autorestart=true
autostart=true
command=cozy-controller
environment=NODE_ENV=production
redirect_stderr=true
user=root
priority=11
EOF
                supervisorctl reload
        fi
	echo 'wait controller startup'
        while ! curl -s 127.0.0.1:9102 >/dev/null; do echo "Wait controller"; sleep 5; done
	echo 'install cozy stack'
        if [ ! -d /usr/local/cozy/apps/data-system ]; then
                cozy-monitor install-cozy-stack
        fi
        if [ ! -d /usr/local/cozy/apps/home ]; then
                cozy-monitor install home
        fi
        if [ ! -d /usr/local/cozy/apps/proxy ]; then
                cozy-monitor install proxy
        fi
	echo 'generate ssl stuff'
        if [ ! -f /etc/cozy/dh.pem ]; then
                openssl dhparam -out /etc/cozy/dh.pem -outform PEM -2 2048
                chmod 400 /etc/cozy/dh.pem
        fi
        if [ ! -f /etc/cozy/server.key ]; then
                openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/cozy/server.key -out /etc/cozy/server.crt -days 3650 -subj "/CN=$COZY_DOMAIN"
                chmod 400 /etc/cozy/server.key
        fi
	echo 'generate nginx configuration'
        if [ -f /etc/nginx/sites-enabled/default ]; then
                rm /etc/nginx/sites-enabled/default
        fi
        if [ ! -f /etc/nginx/sites-enabled/cozy ]; then
                cat > /etc/nginx/sites-available/cozy <<'EOF'
server {
    listen 443;

    server_name $COZY_DOMAIN;

    ssl_certificate /etc/cozy/server.crt;
    ssl_certificate_key /etc/cozy/server.key;
    ssl_dhparam /etc/cozy/dh.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ALL:!aNULL:!eNULL:!LOW:!EXP:!RC4:!3DES:+HIGH:+MEDIUM;
    ssl_prefer_server_ciphers on;
    ssl on;

    gzip_vary on;
    client_max_body_size 1024M;

    add_header Strict-Transport-Security max-age=2678400;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect http:// https://;
        proxy_pass http://127.0.0.1:9104;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    access_log /var/log/nginx/cozy.log;
}

# Always redirect http:// to https://
server {
    listen 80;
    server_name $COZY_DOMAIN;
    return 301 https://$host$request_uri;
}
EOF
                ln -s /etc/nginx/sites-available/cozy /etc/nginx/sites-enabled/cozy
                service nginx reload
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
